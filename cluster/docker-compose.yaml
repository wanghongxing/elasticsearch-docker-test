version: '3'
services:
  # setup:
  #   image: elasticsearch:${STACK_VERSION}
  #   container_name: setup
  #   volumes:
  #     - ./setup.sh:/setup.sh
  #   environment:
  #     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #     - KIBANA_PASSWORD=${KIBANA_PASSWORD}
  #   user: "0"
  #   command: >
  #     bash /setup.sh

  es01:
    # depends_on: 
    #   - setup
    image: elasticsearch:${STACK_VERSION}
    container_name: es01
    volumes:
      - ./data/esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es02,es03
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      # - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl -u elastic:${ELASTIC_PASSWORD} -s -f localhost:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  es02:
    image: elasticsearch:${STACK_VERSION}
    container_name: es02
    depends_on:
      - es01
    volumes:
      # - ./certs:/usr/share/elasticsearch/config/certs
      - ./data/esdata02:/usr/share/elasticsearch/data
    ports:
      - '9202:9200'
      - '9302:9300'
    environment:
      - node.name=es02
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es01,es03
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      # - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl -u elastic:${ELASTIC_PASSWORD} -s -f localhost:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5


  es03:
    image: elasticsearch:${STACK_VERSION}
    container_name: es03
    depends_on:
      - es01
    volumes:  
      - ./data/esdata03:/usr/share/elasticsearch/data
    ports:
      - '9203:9200'
      - '9303:9300'
    environment:
      - node.name=es03
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=es01,es02,es03
      - discovery.seed_hosts=es01,es02
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      # - xpack.license.self_generated.type=${LICENSE}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl -u elastic:${ELASTIC_PASSWORD} -s -f localhost:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5


        
  kibana:
    depends_on:
      es01:
        condition: service_healthy
      es02:
        condition: service_healthy
      es03:
        condition: service_healthy
    image: kibana:${STACK_VERSION}
    container_name: kibana
    ports:
        - ${KIBANA_PORT}:5601
    volumes:
      - ./data/kibanadata:/usr/share/kibana/data

    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

